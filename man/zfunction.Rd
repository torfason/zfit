% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_a_zfunction.R
\name{zfunction}
\alias{zfunction}
\title{Create a pipe-friendly version of any function}
\usage{
zfunction(fun, x, x_not_found = c("error", "warning", "ok"))
}
\arguments{
\item{fun}{The function to adapt. The name should not be quoted,
rather, the actual function should be passed (prefixed with package
if needed).}

\item{x}{The name of the argument that should be moved to the front of the
argument list. Can be passed with or without quotes, and is processed using
non-standard evaluation unless surrounded with curlies, as in \code{{value}},
see details below}

\item{x_not_found}{How to handle the case where the value of \code{x} x ix not the
name of a parameter in fun. If \code{error}, abort the function. If \code{ok}, prepend the value to the
existing parameter list. This can be useful if looking to pipe data into a parameter that
is hidden by a \code{...}.}
}
\description{
\code{zfunction()} rearranges the arguments of any function moving the
specified argument to the front of the list, so that this argument
becomes the recipient of piping.

It returns a copy of the input function, that is completely
identical except for the order of the arguments.
}
\details{
The \code{x} parameter is processed using non-standard evaluation, which can be
disabled using curly brackets. In other words, the following are all
equivalent, and return a file renaming function with the \code{to} parameter as
the first one:
\itemize{
\item \code{zfunction(file.rename, to)}
\item \code{zfunction(file.rename, "to")}
\item \verb{param_name <- "to"; zfunction(file.rename, \{param_name\})}
}
}
\examples{

char_vector <- rownames(mtcars)

# A a grep function with x as first param is often useful
zgrep <- zfunction(grep, x)
grep("ll", char_vector, value=TRUE)
zgrep(char_vector, "ll", value=TRUE)

# plsr hides the data parameter behind the ...
if (requireNamespace("pls")) {
  zplsr <- zfunction(pls::plsr, data, x_not_found = "ok")
  zplsr(cars, dist ~ speed)
}

# Curly {x} handling: These are all equivalent
param_name <- "to";
f1 <- zfunction(file.rename, to)
f2 <- zfunction(file.rename, "to")
f3 <- zfunction(file.rename, {param_name})

}
